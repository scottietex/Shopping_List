[{"/Users/brdavidson/Desktop/Web Development/Projects/Project 3/my-app/src/index.js":"1","/Users/brdavidson/Desktop/Web Development/Projects/Project 3/my-app/src/App.js":"2","/Users/brdavidson/Desktop/Web Development/Projects/Project 3/my-app/src/reportWebVitals.js":"3","/Users/brdavidson/Desktop/Web Development/Projects/Project 3/my-app/src/components/Shop.js":"4","/Users/brdavidson/Desktop/Web Development/Projects/Project 3/my-app/src/components/FilterButton.js":"5","/Users/brdavidson/Desktop/Web Development/Projects/Project 3/my-app/src/components/Form.js":"6"},{"size":631,"mtime":1610660682725,"results":"7","hashOfConfig":"8"},{"size":2674,"mtime":1611165450481,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1610051886811,"results":"10","hashOfConfig":"8"},{"size":2730,"mtime":1611165502136,"results":"11","hashOfConfig":"8"},{"size":446,"mtime":1611174505766,"results":"12","hashOfConfig":"8"},{"size":954,"mtime":1611000911027,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"119qefv",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/Users/brdavidson/Desktop/Web Development/Projects/Project 3/my-app/src/index.js",[],["29","30"],"/Users/brdavidson/Desktop/Web Development/Projects/Project 3/my-app/src/App.js",["31"],"import { nanoid } from \"nanoid\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport Form from \"./components/Form\";\nimport FilterButton from \"./components/FilterButton\";\nimport Shop from \"./components/Shop\";\n\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nconst FILTER_MAP = {\n  All: () => true,\n  Active: item => !item.completed,\n  Completed: item => item.completed\n};\n\nconst FILTER_NAMES = Object.keys(FILTER_MAP)\n\nfunction App(props) {\n  const [filter, setFilter] = useState('All');\n  const [items, setItems] = useState(props.items);\n  function addItem(name) {\n    const newItem = { id: \"shop-\" + nanoid(), name: name, completed: false };\n    setItems([...items, newItem]);\n  };\n\n  function toggleItemCompleted(id) {\n    const updatedItems = items.map(item => {\n      if (id === item.id) {\n        return {...item, completed: !item.completed}\n      }\n      return item;\n    });\n    setItems(updatedItems);\n  }\n\n  function deleteItem(id) {\n    const remainingItems = items.filter(item => id !== item.id);\n    setItems(remainingItems);\n  }\n\n  function editItem(id, newName) {\n    const editedItemList = items.map(item => {\n      if (id === item.id) {\n        //\n        return {...item, name: newName}\n      }\n      return item;\n    });\n    setItems(editedItemList);\n  }\n\n  const itemList = items.filter(FILTER_MAP[filter]).map(item => (\n    <Shop\n      id={item.id}\n      name={item.name}\n      completed={item.completed}\n      key={item.id}\n      toggleItemCompleted={toggleItemCompleted}\n      deleteItem={deleteItem}\n      editItem={editItem}\n    />\n  ));\n  \n  const filterList = FILTER_NAMES.map(name => (\n    <FilterButton\n      key={name}\n      name={name}\n      isPressed={name === filter}\n      setFilter={setFilter}\n    />\n  ));\n\n  const itemsNoun = itemList.length !== 1 ? 'items' : 'item';\n  const headingText = `${itemList.length} ${itemsNoun} remaining`;\n  const listHeadingRef = useRef(null);\n  const prevItemLength = usePrevious(items.length);\n\n  useEffect(() => {\n    if (items.length - prevItemLength === -1) {\n      listHeadingRef.current.focus();\n    }\n  }, [items.length, prevItemLength]);\n\n  return (\n    <div className=\"shopapp stack-large\">\n      <Form addItem={addItem} />\n      <div className=\"filters btn-group stack-exception\">\n      {filterList}\n      </div>\n      <h2 id=\"list-heading\" tabIndex=\"-1\" ref={listHeadingRef}>{headingText}</h2>\n      <ul\n        role=\"list\"\n        className=\"shop-list stack-large stack-exception\"\n        aria-labelledby=\"list-heading\"\n      >\n        {itemList}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/brdavidson/Desktop/Web Development/Projects/Project 3/my-app/src/reportWebVitals.js",[],"/Users/brdavidson/Desktop/Web Development/Projects/Project 3/my-app/src/components/Shop.js",[],["32","33"],"/Users/brdavidson/Desktop/Web Development/Projects/Project 3/my-app/src/components/FilterButton.js",[],"/Users/brdavidson/Desktop/Web Development/Projects/Project 3/my-app/src/components/Form.js",[],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":96,"column":7,"nodeType":"40","endLine":100,"endColumn":8},{"ruleId":"34","replacedBy":"41"},{"ruleId":"36","replacedBy":"42"},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"jsx-a11y/no-redundant-roles","The element ul has an implicit role of list. Defining this explicitly is redundant and should be avoided.","JSXOpeningElement",["43"],["44"],"no-global-assign","no-unsafe-negation"]