{"version":3,"sources":["components/Form.js","components/FilterButton.js","components/Shop.js","App.js","reportWebVitals.js","index.js"],"names":["Form","props","useState","name","setName","onSubmit","e","preventDefault","addItem","alert","className","htmlFor","type","id","autoComplete","value","onChange","target","FilterButton","aria-pressed","isPressed","onClick","setFilter","Shop","isEditing","setEditing","newName","setNewName","editFieldRef","useRef","editButtonRef","wasEditing","ref","useEffect","current","usePrevious","editingTemplate","editItem","viewTemplate","defaultChecked","completed","toggleItemCompleted","deleteItem","focus","FILTER_MAP","All","Active","item","Completed","FILTER_NAMES","Object","keys","App","filter","items","setItems","updatedItems","map","remainingItems","editedItemList","itemList","filterList","itemsNoun","length","headingText","listHeadingRef","prevItemLength","newItem","nanoid","tabIndex","role","aria-labelledby","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e9a8e6b4.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nfunction Form(props) {\n    const [name, setName] = useState(\"\");\n\n    function handleChange(e) {\n        setName(e.target.value);\n    }\n    function handleSubmit(e) {\n        e.preventDefault();\n        if (name==='') return;\n        props.addItem(name);\n        setName('');\n        alert(\"Item added!\")\n      }\n\n    return (\n      <form onSubmit={handleSubmit}>\n        <h2 className=\"label-wrapper\">\n          <label htmlFor=\"new-shop-input\" className=\"label__lg\">\n            What do you need to get?\n          </label>\n        </h2>\n        <input\n          type=\"text\"\n          id=\"new-shop-input\"\n          className=\"input input__lg\"\n          name=\"text\"\n          autoComplete=\"off\"\n          value={name}\n          onChange={handleChange}\n        />\n        <button type=\"submit\" className=\"btn btn__primary btn__lg\">\n          Add\n        </button>\n      </form>\n    );\n  }\n  \n  export default Form;","import React from \"react\";\n\n/* Filter button function */\nfunction FilterButton(props) {\n  return (\n    <button\n      type=\"button\"\n      className=\"btn toggle-btn\"\n      aria-pressed={props.isPressed}\n      onClick={() => props.setFilter(props.name)}\n    >\n      <span className=\"visually-hidden\">Show </span>\n      <span>{props.name}</span>\n      <span className=\"visually-hidden\"> items</span>\n    </button>\n  );\n}\n\nexport default FilterButton;","import React, { useEffect, useRef, useState } from \"react\";\n\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nexport default function Shop(props) {\n\n  const [isEditing, setEditing] = useState(false);\n  const [newName, setNewName] = useState('');\n  const editFieldRef = useRef(null);\n  const editButtonRef = useRef(null);\n  const wasEditing = usePrevious(isEditing);\n\n  function handleChange(e) {\n    setNewName(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.editItem(props.id, newName);\n    setNewName(\"\");\n    setEditing(false);\n  }\n\n  const editingTemplate = (\n    <form className=\"stack-small\" onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <label className=\"shop-label\" htmlFor={props.id}>\n          New name for {props.name}\n        </label>\n        <input\n          id={props.id}\n          className=\"shop-text\"\n          type=\"text\"\n          value={newName}\n          onChange={handleChange}\n          ref={editFieldRef}\n        />\n      </div>\n      <div className=\"btn-group\">\n      <button\n        type=\"button\"\n        className=\"btn shop-cancel\"\n        onClick={() => setEditing(false)}\n        >Cancel<span className=\"visually-hidden\">renaming {props.name}</span>\n      </button>\n        <button type=\"submit\" className=\"btn btn__primary shop-edit\">\n          Save\n          <span className=\"visually-hidden\">new name for {props.name}</span>\n        </button>\n      </div>\n    </form>\n  );\n  const viewTemplate = (\n    <div className=\"stack-small\">\n      <div className=\"c-cb\">\n        <input\n          id={props.id}\n          type=\"checkbox\"\n          defaultChecked={props.completed}\n          onChange={() => props.toggleItemCompleted(props.id)}\n        />\n        <label className=\"shop-label\" htmlFor={props.id}>\n          {props.name}\n        </label>\n      </div>\n      <div className=\"btn-group\">\n        <button\n          type=\"button\"\n          className=\"btn\"\n          onClick={() => setEditing(true)}\n          ref={editButtonRef}\n          >Edit <span className=\"visually-hidden\">{props.name}</span>\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn btn__danger\"\n          onClick={() => props.deleteItem(props.id)}\n          >Delete <span className=\"visually-hidden\">{props.name}</span>\n        </button>\n      </div>\n    </div>\n  );\n\n  useEffect(() => {\n    if (!wasEditing && isEditing) {\n      editFieldRef.current.focus();\n    }\n    if (wasEditing && !isEditing) {\n      editButtonRef.current.focus();\n    }\n  }, [wasEditing, isEditing]);\n\n  return <li className=\"shop\">{isEditing ? editingTemplate : viewTemplate}</li>;\n\n}","import { nanoid } from \"nanoid\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport Form from \"./components/Form\";\nimport FilterButton from \"./components/FilterButton\";\nimport Shop from \"./components/Shop\";\n\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nconst FILTER_MAP = {\n  All: () => true,\n  Active: item => !item.completed,\n  Completed: item => item.completed\n};\n\nconst FILTER_NAMES = Object.keys(FILTER_MAP)\n\nfunction App(props) {\n  const [filter, setFilter] = useState('All');\n  const [items, setItems] = useState(props.items);\n  function addItem(name) {\n    const newItem = { id: \"shop-\" + nanoid(), name: name, completed: false };\n    setItems([...items, newItem]);\n  };\n\n  function toggleItemCompleted(id) {\n    const updatedItems = items.map(item => {\n      if (id === item.id) {\n        return {...item, completed: !item.completed}\n      }\n      return item;\n    });\n    setItems(updatedItems);\n  }\n\n  function deleteItem(id) {\n    const remainingItems = items.filter(item => id !== item.id);\n    setItems(remainingItems);\n  }\n\n  function editItem(id, newName) {\n    const editedItemList = items.map(item => {\n      if (id === item.id) {\n        //\n        return {...item, name: newName}\n      }\n      return item;\n    });\n    setItems(editedItemList);\n  }\n\n  const itemList = items.filter(FILTER_MAP[filter]).map(item => (\n    <Shop\n      id={item.id}\n      name={item.name}\n      completed={item.completed}\n      key={item.id}\n      toggleItemCompleted={toggleItemCompleted}\n      deleteItem={deleteItem}\n      editItem={editItem}\n    />\n  ));\n  \n  const filterList = FILTER_NAMES.map(name => (\n    <FilterButton\n      key={name}\n      name={name}\n      isPressed={name === filter}\n      setFilter={setFilter}\n    />\n  ));\n\n  const itemsNoun = itemList.length !== 1 ? 'items' : 'item';\n  const headingText = `${itemList.length} ${itemsNoun} remaining`;\n  const listHeadingRef = useRef(null);\n  const prevItemLength = usePrevious(items.length);\n\n  useEffect(() => {\n    if (items.length - prevItemLength === -1) {\n      listHeadingRef.current.focus();\n    }\n  }, [items.length, prevItemLength]);\n\n  return (\n    <div className=\"shopapp stack-large\">\n      <Form addItem={addItem} />\n      <div className=\"filters btn-group stack-exception\">\n      {filterList}\n      </div>\n      <h2 id=\"list-heading\" tabIndex=\"-1\" ref={listHeadingRef}>{headingText}</h2>\n      <ul\n        role=\"list\"\n        className=\"shop-list stack-large stack-exception\"\n        aria-labelledby=\"list-heading\"\n      >\n        {itemList}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst DATA = [\n  {id: \"shop-0\", name: \"bread\", completed: true},\n  {id: \"shop-1\", name: \"milk\", completed: false},\n  {id: \"shop-2\", name: \"eggs\", completed: false},\n];\n\nReactDOM.render(<App items={DATA} />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}